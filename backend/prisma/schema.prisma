// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
// schema.prisma

// schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
generator client {
  provider = "prisma-client-js"
}

model User {
  id                  Int      @id @default(autoincrement())
  email               String   @unique
  password            String
  prefix              String // คำนำหน้า
  first_name          String
  last_name           String
  national_id         String   @unique // เลขบัตรประชาชน
  gender              String
  birth_date          DateTime // วันเกิด
  age                 Int // อายุ (คำนวณจากวันเกิด)
  education_level_url String // วุฒิการศึกษา
  phone_number        String // เบอร์โทร
  line_id             String? // Line ID
  profile_image       String? // รูปโปรไฟล์
  skills              String // ทักษะความสามารถ
  email_verified      Boolean  @default(false)
  verification_token  String? // โทเค็นยืนยันอีเมล
  approved            Boolean  @default(false)
  role                String   @default("user") // บทบาท
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt

  JobParticipation JobParticipation[] // ความสัมพันธ์กับงานที่สมัคร
  Log              Log[]
}

model Job {
  id              Int      @id @default(autoincrement())
  title           String // ชื่องาน
  position        String // ตำแหน่งงานที่ต้องการ
  work_date       DateTime // วันที่ทำงาน
  location        String // สถานที่
  start_time      DateTime // เวลาเริ่ม
  end_time        DateTime // เวลาสิ้นสุด
  wage            Float // ค่าแรง
  required_people Int // จำนวนคนที่ต้องการ
  completed       Boolean  @default(false) // สถานะงาน
  created_by      Int // ผู้สร้างงาน
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
  details         String // รายละเอียดเพิ่มเติม

  creator          Admin              @relation(fields: [created_by], references: [id])
  JobParticipation JobParticipation[] // ผู้เข้าร่วมงาน
}

model JobParticipation {
  id         Int      @id @default(autoincrement())
  user_id    Int
  job_id     Int
  status     String // สถานะของผู้เข้าร่วมงาน เช่น สำเร็จ, ล้มเหลว
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user User @relation(fields: [user_id], references: [id]) // ความสัมพันธ์กับ User
  job  Job  @relation(fields: [job_id], references: [id]) // ความสัมพันธ์กับ Job
}

model Log {
  id          Int      @id @default(autoincrement())
  user_id     Int? // ผู้ใช้ที่ทำการกระทำ
  action      String // ประเภทการกระทำ
  request_url String // URL ที่ร้องขอ
  method      String // HTTP method
  details     String // รายละเอียดเพิ่มเติม
  timestamp   DateTime @default(now()) // เวลาที่เกิดเหตุการณ์
  ip_address  String // IP ของผู้ใช้
  user_agent  String? // ข้อมูลเบราว์เซอร์
  user        User?    @relation(fields: [user_id], references: [id]) // ความสัมพันธ์กับผู้ใช้
}

model Admin {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String
  first_name String // ชื่อ
  last_name  String // นามสกุล
  role       String   @default("admin") // กำหนด role ให้เป็น admin
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Job        Job[]
}
