services:
  frontend:
    build: 
      context: ./frontend
      args:
        VITE_API_URL: http://localhost:8000
    ports:
      - "3000:3000" 
    volumes: 
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - VITE_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true 
    networks:
      - app-network 
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    build: ./backend
    ports:
      - "8000:8000"
  
    command: nodemon src/server.js
    volumes:
      - uploads_data:/app/uploads
      - ./backend/.env:/app/.env 
      - ./backend/prisma:/app/prisma
      - ./backend:/app 
      - /app/node_modules  
    
    environment:
      - NODE_ENV=development
      - PORT=8000
      - DATABASE_URL=postgresql://postgres:s123456789@db:5432/Parttime?schema=public&options=-c%20timezone=Asia%2FBangkok
     
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=s123456789
      - POSTGRES_DB=Parttime
      - TZ=Asia/Bangkok
      - PGTZ=Asia/Bangkok
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: ["postgres", "-c", "timezone=Asia/Bangkok"]
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s


  pgadmin:    
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network
    depends_on:
      - db
volumes:
  uploads_data:
  postgres_data:
  pgadmin_data: 

networks:
  app-network:
    driver: bridge